# HTTP server - redirect to HTTPS after SSL setup
server {
  listen 80;
  server_name puertoricotraveldeals.com www.puertoricotraveldeals.com;
  
  # Health check endpoint (always available on HTTP)
  location /healthz { 
    return 200 'ok'; 
    add_header Content-Type text/plain; 
  }
  
  # Redirect to HTTPS (uncomment after SSL certificates are installed)
  # return 301 https://$host$request_uri;
  
  # Temporary: serve directly via HTTP until SSL is configured
  location / {
    proxy_pass http://127.0.0.1:4000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }
}

# HTTPS server (uncomment and configure after SSL certificates are installed)
# server {
#   listen 443 ssl http2;
#   server_name puertoricotraveldeals.com www.puertoricotraveldeals.com;
#   
#   # SSL Configuration (certificates will be managed by Certbot)
#   ssl_certificate /etc/letsencrypt/live/puertoricotraveldeals.com/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/puertoricotraveldeals.com/privkey.pem;
#   include /etc/letsencrypt/options-ssl-nginx.conf;
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#   
#   # Security headers
#   add_header X-Frame-Options DENY;
#   add_header X-Content-Type-Options nosniff;
#   add_header X-XSS-Protection "1; mode=block";
#   add_header Referrer-Policy "strict-origin-when-cross-origin";
#   
#   # Health check endpoint
#   location /healthz { 
#     return 200 'ok'; 
#     add_header Content-Type text/plain; 
#   }
#   
#   # Main application
#   location / {
#     proxy_pass http://127.0.0.1:4000;
#     proxy_http_version 1.1;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_cache_bypass $http_upgrade;
#   }
# }
